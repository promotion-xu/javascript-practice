// 1. js里的异步操作

// callback (回调函数)
// 回调函数代表着，当某个任务处理完，然后需要做的事。比如读取文件，连接数据库，等文件准备好，或数据库连接成功执行编写的回调函数，又比如像一些动画处理，当动画走完，然后执行回调。

// 发布订阅模式
// 顾名思义，便是先订阅了事件，有人一发布事件你就知道了，接着执行后面的操作。

// Promise
// Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件的结果，相比回调函数，Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。

// Generator (生成器)函数
// Generator 函数是 ES6 提供的一种异步编程解决方案，其行为类似于状态机。

// async/await
// async/await 本质上还是基于 Generator 函数，可以说是 Generator 函数的语法糖，async 就相当于之前写的run函数(执行Generator函数的函数),而 await 就相当于 yield
// ，只不过 await 表达式后面只能跟着 Promise 对象，如果不是 Promise 对象的话，会通过 Promise.resolve 方法使之变成 Promise 对象。async 修饰 function,其返回一个 Promise 对象

// 2. 事件循环
// js 会按照执行顺序执行同步代码，当遇到异步代码时，会先放到异步队列里，等待同步代码执行完毕，再到异步队列里去执行。
