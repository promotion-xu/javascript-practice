// 1. 理解原型设计模式以及JavaScript中的原型规则

// A. 所有的引用类型（数组、对象、函数），都具有特殊性，即可自由扩展属性；
// B. 所有的引用类型（数组、对象、函数），都有一个"__proto__"属性（隐式原型）， 属性值是一个普通的对象;
// C. 所有的函数，都具有一个"prototype"属性（显示原型），属性值也是一个普通的对象
// D. 所有的引用类型（数组、对象、函数），其隐式原型指向指向其构造函数的显示原型 "obj.__proto__ === Object.prototype"
// E. 当试图得到一个对象上的属性时，如果对象本身没有这个属性，就会去__proto__找
